{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:encodes": {
    "@id": "amf://id#4",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:server": {
      "@id": "amf://id#5",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://api.domain.com/"
    },
    "schema-org:documentation": [
      {
        "@id": "amf://id#6",
        "@type": [
          "schema-org:CreativeWork",
          "doc:DomainElement"
        ],
        "schema-org:description": "# This is an example API spec\nThe API doesn't exists in the real world therefore calls made to any endpoint will always fail.\nIf you'd like to perform actual request and see the response try GitHub API (which doesn't require user authentication in some endpoints) or other APIs.\nNote that you may need a Client ID or valid authorization token to perform a call to some APIs that are secured by the OAuth 2 protocol.\nThank you for testing the API console. Your feedback is welcome. Email us: arc@mulesoft.com\n",
        "schema-org:title": "Read this!"
      },
      {
        "@id": "amf://id#2",
        "@type": [
          "schema-org:CreativeWork",
          "doc:DomainElement"
        ],
        "schema-org:description": "This is test document.\n\n## Example\nLet's say you want to generate a random number in the request. So the property\nvalue like:\n```\nhttp://www.domain.com/?time=${now}\n```\ncan produce:\n```\nhttp://www.domain.com/?time=12312312312\n```\n## Build-in magic variables.\n| Variable | Description | Example |\n| --- | --- | --- |\n| `${random}` | Will generate random number in range from 0 to Number.MAX_SAFE_INTEGER | 9007199254740991 |\n| `${random:NUMBER}` | A variation of `${random}` where the result will be remembered and can be used in other property. If the same `NUMBER` occurs again then previously generated value will be used. | 7199254740 |\n| `${now}` | Inserts current epoch time | 12312312312 |\n",
        "schema-org:title": "About"
      },
      {
        "@id": "amf://id#7",
        "@type": [
          "schema-org:CreativeWork",
          "doc:DomainElement"
        ],
        "schema-org:description": "# A test documentation.\nThis text was created by ARC's RAML editor.\nYou probably see this because you are testing ARC's web components and this component\nis responsible for displaying a documentation from the RAML definition.\nPlay around with the element and use it in your project.\nPlease, note the licensing information available in every ARC component.\nIf you have any question email me: arc@mulesoft.com\nOr slack me (internally only): Pawel Psztyc (P3)\n",
        "schema-org:title": "Test docs"
      }
    ],
    "schema-org:name": "My super cool, example API",
    "schema-org:version": "v1"
  },
  "doc:references": {
    "@id": "amf://id#1",
    "@type": [
      "doc:UserDocumentation",
      "doc:Fragment",
      "doc:Unit"
    ],
    "doc:encodes": {
      "@id": "amf://id#2",
      "@type": [
        "schema-org:CreativeWork",
        "doc:DomainElement"
      ],
      "schema-org:description": "This is test document.\n\n## Example\nLet's say you want to generate a random number in the request. So the property\nvalue like:\n```\nhttp://www.domain.com/?time=${now}\n```\ncan produce:\n```\nhttp://www.domain.com/?time=12312312312\n```\n## Build-in magic variables.\n| Variable | Description | Example |\n| --- | --- | --- |\n| `${random}` | Will generate random number in range from 0 to Number.MAX_SAFE_INTEGER | 9007199254740991 |\n| `${random:NUMBER}` | A variation of `${random}` where the result will be remembered and can be used in other property. If the same `NUMBER` occurs again then previously generated value will be used. | 7199254740 |\n| `${now}` | Inserts current epoch time | 12312312312 |\n",
      "schema-org:title": "About"
    }
  }
}